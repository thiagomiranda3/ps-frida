/*
 * Auto-generated by Frida. Please modify to match the signature of recvfrom.
 * This stub is currently auto-generated from manpages when available.
 *
 * For full API reference, see: https://frida.re/docs/javascript-api/
 */

defineHandler({
  onEnter(log, args, state) {
    // In onEnter, we only store the address of the buffer.
    // The buffer itself is empty at this point.
    // The 'state' object lets us pass data from onEnter to onLeave.
    state.buffer = args[1];
  },

  onLeave(log, retval, state) {
    // retval is the return value of recvfrom: the number of bytes received.
    const bytesReceived = retval.toInt32();

    // Only process if the call was successful (bytes received > 0)
    if (bytesReceived > 0) {
      log(`[+] recvfrom received ${bytesReceived} bytes of data:`);
      
      // Read the data from the buffer address we saved in onEnter.
      // We use hexdump to get a nice, readable view of the binary data.
      const data = state.buffer.readByteArray(bytesReceived);

      const hexString = Array.from(new Uint8Array(data))
        .map(byte => byte.toString(16).padStart(2, '0'))
        .join('');

      //log(hexdump(data, { ansi: true }));
      log(`[+] recvfrom received ${bytesReceived} bytes: ${hexString}`);
    }
  }
});
